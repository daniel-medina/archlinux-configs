# ESLint
snippet eslint-disable-line "Eslint - disable line"
// eslint-disable-line
endsnippet

# Comments
snippet comment-single "Single line comment"
/** $1 */
endsnippet

snippet comment-multi "Multi line comment"
/**
 * $1
 */
endsnippet

snippet part "Part of a source code file"
// --------------------------- ${1:Part name} --------------------------- {{{

$2

// }}}
endsnippet

# Functions
snippet function "Function"
/** ${1:Function name} {{{
 *
 * ${2:Function description}
 *
 * @param {Type} tag Description
 * @returns {Type} tag
 */
function $1 (${3:Args}) : ${4:Type} {
	$5
}
// }}}
endsnippet

# Functions asynchronous
snippet function-async "Asynchronous function"
/** ${1:Function name} {{{
 *
 * ${2:Function description}
 *
 * @async
 * @param {Type} tag Description
 * @returns {Type} tag
 */
async function $1 (${3:Args}) : ${4:Type} {
	$5
}
// }}}
endsnippet

# Anonymous function
snippet function-anonymous "Anonymous function"
/** anonymous function {{{
 *
 * ${1:Function description}
 *
 * @param {Type} tag Description
 * @returns {Type} tag
 */
function ($2) {
	$3
}
// }}}
endsnippet

# Asynchronous anonymous function
snippet function-anonymous-async "Anonymous asynchronous function"
/** anonymous function {{{
 *
 * ${1:Function description}
 *
 * @async
 * @param {Type} tag Description
 * @returns {Type} tag
 */
async function ($2) {
	$3
}
// }}}
endsnippet

snippet function-exec-async "Asynchronous code execution"
/** asynchronous code execution {{{
 *
 * @async
 * @throws Will throw an error to the console if it catches one
 */
(async function () {
	try {
		$1
	} catch (error) {
		console.log(error)
	}
}())
// }}}
endsnippet

snippet new-file "Generate the first comment of a file with author name and date"
/**
 * ${1:Description}
 *
 * @author Daniel Medina
 * Date: `system("date +%Y-%m-%d")`
 */

$2
endsnippet
